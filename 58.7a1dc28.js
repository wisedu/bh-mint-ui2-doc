webpackJsonp([58],{223:function(s,t){s.exports="<section><h1>Picker</h1> <blockquote> <p>A picker with multi-slot interaction.</p> </blockquote> <hr> <h2>Import</h2> <pre><code class=language-javascript><span class=hljs-keyword>import</span> { Picker } <span class=hljs-keyword>from</span> <span class=hljs-string>'mint-ui'</span>;\n\nVue.component(Picker.name, Picker);\n</code></pre> <h2>Example</h2> <p>Configure <code>slots</code>. When any picked value changesï¼Œthe <code>change</code> event triggers. <code>change</code> event has two parameters: the vue instance of the <code>picker</code> and an array made up of the picked values of each slot</p> <pre><code class=language-html><span class=hljs-tag>&lt;<span class=hljs-name>mt-picker</span> <span class=hljs-attr>:slots</span>=<span class=hljs-string>\"slots\"</span> <span class=hljs-attr>@change</span>=<span class=hljs-string>\"onValuesChange\"</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>mt-picker</span>&gt;</span>\n</code></pre> <pre><code class=language-javascript><span class=hljs-keyword>export</span> <span class=hljs-keyword>default</span> {\n  <span class=hljs-attr>methods</span>: {\n    onValuesChange(picker, values) {\n      <span class=hljs-keyword>if</span> (values[<span class=hljs-number>0</span>] &gt; values[<span class=hljs-number>1</span>]) {\n        picker.setSlotValue(<span class=hljs-number>1</span>, values[<span class=hljs-number>0</span>]);\n      }\n    }\n  },\n  data() {\n    <span class=hljs-keyword>return</span> {\n      <span class=hljs-attr>slots</span>: [\n        {\n          <span class=hljs-attr>flex</span>: <span class=hljs-number>1</span>,\n          <span class=hljs-attr>values</span>: [<span class=hljs-string>'2015-01'</span>, <span class=hljs-string>'2015-02'</span>, <span class=hljs-string>'2015-03'</span>, <span class=hljs-string>'2015-04'</span>, <span class=hljs-string>'2015-05'</span>, <span class=hljs-string>'2015-06'</span>],\n          <span class=hljs-attr>className</span>: <span class=hljs-string>'slot1'</span>,\n          <span class=hljs-attr>textAlign</span>: <span class=hljs-string>'right'</span>\n        }, {\n          <span class=hljs-attr>divider</span>: <span class=hljs-literal>true</span>,\n          <span class=hljs-attr>content</span>: <span class=hljs-string>'-'</span>,\n          <span class=hljs-attr>className</span>: <span class=hljs-string>'slot2'</span>\n        }, {\n          <span class=hljs-attr>flex</span>: <span class=hljs-number>1</span>,\n          <span class=hljs-attr>values</span>: [<span class=hljs-string>'2015-01'</span>, <span class=hljs-string>'2015-02'</span>, <span class=hljs-string>'2015-03'</span>, <span class=hljs-string>'2015-04'</span>, <span class=hljs-string>'2015-05'</span>, <span class=hljs-string>'2015-06'</span>],\n          <span class=hljs-attr>className</span>: <span class=hljs-string>'slot3'</span>,\n          <span class=hljs-attr>textAlign</span>: <span class=hljs-string>'left'</span>\n        }\n      ]\n    };\n  }\n};\n</code></pre> <h2><code>change</code> event</h2> <p>In <code>change</code> event you can use some methods:</p> <ul> <li>getSlotValue(index): get the picked value of a specific slot</li> <li>setSlotValue(index, value): set the picked value of a specific slot. The second parameter <code>value</code> must be in this slot's <code>value</code> array</li> <li>getSlotValues(index): get the <code>value</code> array of a specific slot</li> <li>setSlotValues(index, values): set the <code>value</code> array of a specific slot</li> <li>getValues(): returns an array made up of the picked values of each slot</li> <li>setValues(values): set the picked values for each slot. <code>values</code> is an array and each value in <code>values</code> should be in the corresponding slot's <code>value</code> array</li> </ul> <h2><code>slots</code></h2> <p>The <code>slots</code> array is made up of objects. Each object represents a slot</p> <div class=table-container><table class=table><thead> <tr> <th>key</th> <th>description</th> </tr> </thead> <tbody> <tr> <td>divider</td> <td>if the corresponding slot is a divider</td> </tr> <tr> <td>content</td> <td>the text of the divider slot</td> </tr> <tr> <td>values</td> <td>array of acceptable values of the corresponding slot</td> </tr> <tr> <td>defaultIndex</td> <td>the index of the default picked value for the corresponding slot. Default is 0</td> </tr> <tr> <td>textAlign</td> <td>alignment of the corresponding slot</td> </tr> <tr> <td>flex</td> <td>value of CSS <code>flex</code> for the corresponding slot</td> </tr> <tr> <td>className</td> <td>class name of the corresponding slot</td> </tr> </tbody> </table></div><h2>API</h2> <div class=table-container><table class=table><thead> <tr> <th>option</th> <th>description</th> <th>type</th> <th>acceptable values</th> <th>default</th> </tr> </thead> <tbody> <tr> <td>slots</td> <td>the object array for slots</td> <td>Array</td> <td></td> <td>[]</td> </tr> <tr> <td>showToolbar</td> <td>if a toolbar is shown above the slots. Its content can be customized</td> <td>Boolean</td> <td></td> <td>false</td> </tr> <tr> <td>visibleItemCount</td> <td>the amount of visible values in each slot</td> <td>Number</td> <td></td> <td>5</td> </tr> </tbody> </table></div><h2>Slot</h2> <div class=table-container><table class=table><thead> <tr> <th>name</th> <th>description</th> </tr> </thead> <tbody> <tr> <td>-</td> <td>the content of the toolbar when <code>showToolbar</code> is <code>true</code></td> </tr> </tbody> </table></div></section>"},350:function(s,t,a){var e,n,l={};n=a(223),s.exports=e||{},s.exports.__esModule&&(s.exports=s.exports.default);var o="function"==typeof s.exports?s.exports.options||(s.exports.options={}):s.exports;n&&(o.template=n),o.computed||(o.computed={}),Object.keys(l).forEach(function(s){var t=l[s];o.computed[s]=function(){return t}})},40:function(s,t,a){s.exports=a(350)}});