webpackJsonp([125],{154:function(s,a){s.exports='<section><h1>Mint UI documentation</h1> <p>This part introduces installation and basic usage of Mint UI.</p> <hr> <h3>npm</h3> <p>Installing with npm is recommended, for it works seamlessly with <a href=https://webpack.js.org/ >webpack</a>.</p> <pre><code class=language-shell>npm i mint-ui -S\n</code></pre> <h3>CDN</h3> <p>Get the latest version from <a href=https://unpkg.com/mint-ui/ >unpkg.com/mint-ui</a>, and import JavaScript and CSS file in your page.</p> <pre><code class=language-html><span class=hljs-comment>&lt;!-- import CSS --&gt;</span>\n<span class=hljs-tag>&lt;<span class=hljs-name>link</span> <span class=hljs-attr>rel</span>=<span class=hljs-string>"stylesheet"</span> <span class=hljs-attr>href</span>=<span class=hljs-string>"https://unpkg.com/mint-ui/lib/style.css"</span>&gt;</span>\n<span class=hljs-comment>&lt;!-- import JavaScript --&gt;</span>\n<span class=hljs-tag>&lt;<span class=hljs-name>script</span> <span class=hljs-attr>src</span>=<span class=hljs-string>"https://unpkg.com/mint-ui/lib/index.js"</span>&gt;</span><span class=undefined></span><span class=hljs-tag>&lt;/<span class=hljs-name>script</span>&gt;</span>\n</code></pre> <h3>Hello world</h3> <p>If you are using CDN, a Hello world page is easy to code with Mint UI.</p> <pre><code class=language-html><span class=hljs-meta>&lt;!DOCTYPE html&gt;</span>\n<span class=hljs-tag>&lt;<span class=hljs-name>html</span>&gt;</span>\n<span class=hljs-tag>&lt;<span class=hljs-name>head</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>meta</span> <span class=hljs-attr>charset</span>=<span class=hljs-string>"UTF-8"</span>&gt;</span>\n  <span class=hljs-comment>&lt;!-- import CSS --&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>link</span> <span class=hljs-attr>rel</span>=<span class=hljs-string>"stylesheet"</span> <span class=hljs-attr>href</span>=<span class=hljs-string>"https://unpkg.com/mint-ui/lib/style.css"</span>&gt;</span>\n<span class=hljs-tag>&lt;/<span class=hljs-name>head</span>&gt;</span>\n<span class=hljs-tag>&lt;<span class=hljs-name>body</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>div</span> <span class=hljs-attr>id</span>=<span class=hljs-string>"app"</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>mt-button</span> <span class=hljs-attr>@click.native</span>=<span class=hljs-string>"handleClick"</span>&gt;</span>Button<span class=hljs-tag>&lt;/<span class=hljs-name>mt-button</span>&gt;</span>\n  <span class=hljs-tag>&lt;/<span class=hljs-name>div</span>&gt;</span>\n<span class=hljs-tag>&lt;/<span class=hljs-name>body</span>&gt;</span>\n  <span class=hljs-comment>&lt;!-- import Vue before Mint UI --&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>script</span> <span class=hljs-attr>src</span>=<span class=hljs-string>"https://unpkg.com/vue/dist/vue.js"</span>&gt;</span><span class=undefined></span><span class=hljs-tag>&lt;/<span class=hljs-name>script</span>&gt;</span>\n  <span class=hljs-comment>&lt;!-- import JavaScript --&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>script</span> <span class=hljs-attr>src</span>=<span class=hljs-string>"https://unpkg.com/mint-ui/lib/index.js"</span>&gt;</span><span class=undefined></span><span class=hljs-tag>&lt;/<span class=hljs-name>script</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>script</span>&gt;</span><span class=actionscript>\n    <span class=hljs-keyword>new</span> Vue({\n      el: <span class=hljs-string>\'#app\'</span>,\n      methods: {\n        handleClick: <span class=hljs-function><span class=hljs-keyword>function</span><span class=hljs-params>()</span> </span>{\n          <span class=hljs-keyword>this</span>.$toast(<span class=hljs-string>\'Hello world!\'</span>)\n        }\n      }\n    })\n  </span><span class=hljs-tag>&lt;/<span class=hljs-name>script</span>&gt;</span>\n<span class=hljs-tag>&lt;/<span class=hljs-name>html</span>&gt;</span>\n</code></pre> <iframe width=100% height=300 src=//jsfiddle.net/leopoldthecuber/jd6on9vr/embedded/ allowfullscreen=allowfullscreen frameborder=0></iframe> <p>If you are using npm and wish to apply webpack, please continue to the next page: <a v-link="\'/en2/quickstart\'">Quick Start</a>.</p> <br> <p><strong>About event handlers</strong></p> <p>In Vue 2.0, to listen for a native DOM event on a component, you\'ll need to use the <code>.native</code> modifier:</p> <pre><code class=language-html><span class=hljs-tag>&lt;<span class=hljs-name>my-component</span> <span class=hljs-attr>@click.native</span>=<span class=hljs-string>"handleClick"</span>&gt;</span>Click Me<span class=hljs-tag>&lt;/<span class=hljs-name>my-component</span>&gt;</span>\n</code></pre> <p>For the sake of usability, we handled the <code>Button</code> component so that it can listen to <code>click</code> events:</p> <pre><code class=language-html><span class=hljs-tag>&lt;<span class=hljs-name>mt-button</span> <span class=hljs-attr>@click</span>=<span class=hljs-string>"handleButtonClick"</span>&gt;</span>Click Me<span class=hljs-tag>&lt;/<span class=hljs-name>mt-button</span>&gt;</span>\n</code></pre> <p>But for other components, the <code>.native</code> modifier is still required.</p> </section>'},281:function(s,a,n){var t,l,p={};l=n(154),s.exports=t||{},s.exports.__esModule&&(s.exports=s.exports.default);var e="function"==typeof s.exports?s.exports.options||(s.exports.options={}):s.exports;l&&(e.template=l),e.computed||(e.computed={}),Object.keys(p).forEach(function(s){var a=p[s];e.computed[s]=function(){return a}})},54:function(s,a,n){s.exports=n(281)}});