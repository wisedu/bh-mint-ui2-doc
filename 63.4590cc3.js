webpackJsonp([63],{101:function(t,s,a){t.exports=a(343)},216:function(t,s){t.exports="<section><h1>Message box</h1> <blockquote> <p>弹出式提示框，有多种交互形式。</p> </blockquote> <hr> <h2>引入</h2> <pre><code class=language-javascript><span class=hljs-keyword>import</span> { MessageBox } <span class=hljs-keyword>from</span> <span class=hljs-string>'mint-ui'</span>;\n</code></pre> <h2>例子</h2> <p>以标题与内容字符串为参数进行调用</p> <pre><code class=language-javascript>MessageBox(<span class=hljs-string>'提示'</span>, <span class=hljs-string>'操作成功'</span>);\n</code></pre> <p>或者传入一个对象</p> <pre><code class=language-javascript>MessageBox({\n  <span class=hljs-attr>title</span>: <span class=hljs-string>'提示'</span>,\n  <span class=hljs-attr>message</span>: <span class=hljs-string>'确定执行此操作?'</span>,\n  <span class=hljs-attr>showCancelButton</span>: <span class=hljs-literal>true</span>\n});\n</code></pre> <p>此外，<code>MessageBox</code> 还提供了 <code>alert</code>、<code>confirm</code> 和 <code>prompt</code> 三个方法，它们都返回一个 Promise</p> <pre><code class=language-javascript>MessageBox.alert(message, title);\n</code></pre> <pre><code class=language-javascript>MessageBox.alert(<span class=hljs-string>'操作成功'</span>).then(<span class=hljs-function><span class=hljs-params>action</span> =&gt;</span> {\n  ...\n});\n</code></pre> <pre><code class=language-javascript>MessageBox.confirm(message, title);\n</code></pre> <pre><code class=language-javascript>MessageBox.confirm(<span class=hljs-string>'确定执行此操作?'</span>).then(<span class=hljs-function><span class=hljs-params>action</span> =&gt;</span> {\n  ...\n});\n</code></pre> <pre><code class=language-javascript>MessageBox.prompt(message, title);\n</code></pre> <pre><code class=language-javascript>MessageBox.prompt(<span class=hljs-string>'请输入姓名'</span>).then(<span class=hljs-function>(<span class=hljs-params>{ value, action }</span>) =&gt;</span> {\n  ...\n});\n</code></pre> <p>在 prompt 中，若用户点击了取消按钮，则 Promise 的状态会变为 rejected</p> <h2>API</h2> <div class=table-container><table class=table><thead> <tr> <th>参数</th> <th>说明</th> <th>类型</th> <th>可选值</th> <th>默认值</th> </tr> </thead> <tbody> <tr> <td>title</td> <td>提示框的标题</td> <td>String</td> <td></td> <td></td> </tr> <tr> <td>message</td> <td>提示框的内容</td> <td>String</td> <td></td> <td></td> </tr> <tr> <td>showConfirmButton</td> <td>是否显示确认按钮</td> <td>Boolean</td> <td></td> <td>true</td> </tr> <tr> <td>showCancelButton</td> <td>是否显示取消按钮</td> <td>Boolean</td> <td></td> <td>false</td> </tr> <tr> <td>confirmButtonText</td> <td>确认按钮的文本</td> <td>String</td> <td></td> <td></td> </tr> <tr> <td>confirmButtonHighlight</td> <td>是否将确认按钮的文本加粗显示</td> <td>Boolean</td> <td></td> <td>false</td> </tr> <tr> <td>confirmButtonClass</td> <td>确认按钮的类名</td> <td>String</td> <td></td> <td></td> </tr> <tr> <td>cancelButtonText</td> <td>取消按钮的文本</td> <td>String</td> <td></td> <td></td> </tr> <tr> <td>cancelButtonHighlight</td> <td>是否将取消按钮的文本加粗显示</td> <td>Boolean</td> <td></td> <td>false</td> </tr> <tr> <td>cancelButtonClass</td> <td>取消按钮的类名</td> <td>String</td> <td></td> <td></td> </tr> <tr> <td>showInput</td> <td>是否显示一个输入框</td> <td>Boolean</td> <td></td> <td>false</td> </tr> <tr> <td>inputValue</td> <td>输入框的值</td> <td>String</td> <td></td> <td></td> </tr> <tr> <td>inputPlaceholder</td> <td>输入框的占位符</td> <td>String</td> <td></td> <td></td> </tr> </tbody> </table></div></section>"},343:function(t,s,a){var d,e,n={};e=a(216),t.exports=d||{},t.exports.__esModule&&(t.exports=t.exports.default);var o="function"==typeof t.exports?t.exports.options||(t.exports.options={}):t.exports;e&&(o.template=e),o.computed||(o.computed={}),Object.keys(n).forEach(function(t){var s=n[t];o.computed[t]=function(){return s}})}});